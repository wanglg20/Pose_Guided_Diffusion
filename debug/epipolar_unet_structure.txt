pretrained_epipolar_Unet(
  (time_embed): Sequential(
    (0): Linear(in_features=192, out_features=768, bias=True)
    (1): SiLU()
    (2): Linear(in_features=768, out_features=768, bias=True)
  )
  (label_emb): Embedding(1000, 768)
  (input_blocks): ModuleList(
    (0): TimestepEmbedSequential(
      (0): Conv2d(3, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (1): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (2): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (3): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (4): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (x_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (5): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (6): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (7): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (8): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (x_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (9): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(384, 576, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (10): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (11): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (12): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (x_upd): Downsample(
          (op): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (13): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(576, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
    (14): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
    (15): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (middle_block): TimestepEmbedSequential(
    (0): ResBlock(
      (in_layers): Sequential(
        (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (h_upd): Identity()
      (x_upd): Identity()
      (emb_layers): Sequential(
        (0): SiLU()
        (1): Linear(in_features=768, out_features=1536, bias=True)
      )
      (out_layers): Sequential(
        (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Dropout(p=0.1, inplace=False)
        (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip_connection): Identity()
    )
    (1): AttentionBlock(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
      (attention): QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (2): ResBlock(
      (in_layers): Sequential(
        (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (h_upd): Identity()
      (x_upd): Identity()
      (emb_layers): Sequential(
        (0): SiLU()
        (1): Linear(in_features=768, out_features=1536, bias=True)
      )
      (out_layers): Sequential(
        (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (1): SiLU()
        (2): Dropout(p=0.1, inplace=False)
        (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (skip_connection): Identity()
    )
  )
  (output_blocks): ModuleList(
    (0): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1536, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1536, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1536, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
    (1): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1536, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1536, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1536, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
    (2): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1536, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1536, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1536, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
    )
    (3): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1344, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1344, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1344, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
        (qkv): Conv1d(768, 2304, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
      )
      (2): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Upsample()
        (x_upd): Upsample()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1536, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (4): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1344, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1344, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1344, 576, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (5): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1152, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1152, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1152, 576, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (6): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 1152, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(1152, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(1152, 576, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
    )
    (7): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 960, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(960, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(960, 576, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
        (qkv): Conv1d(576, 1728, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
      )
      (2): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Upsample()
        (x_upd): Upsample()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=1152, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (8): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 960, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(960, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(960, 384, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (9): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(768, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (10): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 768, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(768, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
    )
    (11): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(576, 384, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): AttentionBlock(
        (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
        (qkv): Conv1d(384, 1152, kernel_size=(1,), stride=(1,))
        (attention): QKVAttention()
        (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
      )
      (2): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Upsample()
        (x_upd): Upsample()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=768, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Identity()
      )
    )
    (12): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 576, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(576, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(576, 192, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (13): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (14): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (15): TimestepEmbedSequential(
      (0): ResBlock(
        (in_layers): Sequential(
          (0): GroupNorm32(32, 384, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Conv2d(384, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (h_upd): Identity()
        (x_upd): Identity()
        (emb_layers): Sequential(
          (0): SiLU()
          (1): Linear(in_features=768, out_features=384, bias=True)
        )
        (out_layers): Sequential(
          (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
          (1): SiLU()
          (2): Dropout(p=0.1, inplace=False)
          (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (skip_connection): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (out): Sequential(
    (0): GroupNorm32(32, 192, eps=1e-05, affine=True)
    (1): SiLU()
    (2): Conv2d(192, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (down_epipolar_attn_list): ModuleList(
    (0): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (1): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (2): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (3): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (4): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (5): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (6): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (7): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (8): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
  )
  (up_epipolar): Sequential(
    (0): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (1): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (2): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (3): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (4): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (5): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (6): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (7): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (8): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
  )
  (up_epipolar_attn_list): ModuleList(
    (0): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (1): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (2): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
    (3): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (4): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (5): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 576, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1152, 1728, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(576, 576, kernel_size=(1,), stride=(1,))
    )
    (6): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (7): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
    (8): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 384, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(768, 1152, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(384, 384, kernel_size=(1,), stride=(1,))
    )
  )
  (middle_epipolar_attn_list): ModuleList(
    (0): epipolar_Attention_Block(
      (norm): GroupNorm32(32, 768, eps=1e-05, affine=True)
      (key_proj): Conv2d(1, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (qkv): Conv1d(1536, 2304, kernel_size=(1,), stride=(1,))
      (attention): Weighted_QKVAttention()
      (proj_out): Conv1d(768, 768, kernel_size=(1,), stride=(1,))
    )
  )
)